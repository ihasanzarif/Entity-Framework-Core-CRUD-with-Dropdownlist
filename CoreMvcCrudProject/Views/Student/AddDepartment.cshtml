@model CoreMvcCrudProject.Models.Department

@{
    ViewData["Title"] = "Add Department";
}

<h4>Department</h4>
<hr />
@if (ViewData["Message"] != null)
{
    <div class="row">
        <div class="col-md-10 justify-content-center">
            <div class="alert alert-danger" role="alert">
                @ViewData["Message"]
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-6">
        <form asp-action="AddDepartment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DepartmentId"/>
            <div class="form-group">
                <label asp-for="DepartmentName" class="control-label"></label>
                <input asp-for="DepartmentName" class="form-control" />
                <span asp-validation-for="DepartmentName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentCode" class="control-label"></label>
                <input asp-for="DepartmentCode" class="form-control" />
                <span asp-validation-for="DepartmentCode" class="text-danger"></span>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @if (Model.DepartmentId > 0)
                    {
                        <input type="submit" value="Update" class="btn btn-primary btn-block"/>
                    }
                    else
                    {
                        <input type="submit" value="Create" class="btn btn-success btn-block"/>
                    }
             
                </div>
                <div class="form-group col-md-6">
                    <a href="@Url.Action("Index","Student")" class="btn btn-dark btn-block"><i class="fa fa-table"></i> Back to List</a>
                </div>
            </div>
        
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
